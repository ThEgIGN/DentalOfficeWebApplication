package servlets;

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import managers.PatientManager;
import model.Patient;

/**
 * Servlet implementation class CreatePatientServlet
 */
@WebServlet("/CreatePatientServlet")
public class CreatePatientServlet extends HttpServlet {
	private static final String MESSAGE_PARAM = "messageCreatePatient";
	private static final long serialVersionUID = 1L;
	private PatientManager patientManager;
	private Patient patient;

	// Check if required params (all but phone number) are not empty
	private boolean checkParams(String[] params) {
		for (String p : params) {
			if (p == null || p.isBlank()) {
				return false;
			}
		}
		return true;
	}

	private void forwardResponseWithMessage(HttpServletRequest request, HttpServletResponse response,
			String messageParam, String message, String target) throws ServletException, IOException {
		request.setAttribute(messageParam, message);
		RequestDispatcher rd = request.getServletContext().getRequestDispatcher(target);
		rd.forward(request, response);
	}

	private void forwardResponseWithPatient(HttpServletRequest request, HttpServletResponse response, String target)
			throws ServletException, IOException {
		request.getSession().setAttribute("currentPatient", patient);
		RequestDispatcher rd = request.getServletContext().getRequestDispatcher(target);
		rd.forward(request, response);
	}

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public CreatePatientServlet() {
		super();
		patientManager = new PatientManager();
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// Since this servlet is being used by a patient and doctor, we need to know
		// where to send response
		String messageValue = "";
		String targetJSP = request.getParameter("targetJSP");
		String jmbg = request.getParameter("jmbg");
		String firstName = request.getParameter("firstName");
		String lastName = request.getParameter("lastName");
		String email = request.getParameter("email");
		String phoneNumber = request.getParameter("phoneNumber");
		String[] params = { firstName, lastName, email, jmbg };
		boolean checkParams = checkParams(params);
		// If every needed params isn't blank, proceed
		if (checkParams) {
			// Make sure that user with same JMBG isn't being created
			Patient tempPatient = patientManager.findPatientByJmbg(jmbg);
			if (tempPatient == null) {
				patient = patientManager.addPatient(firstName, lastName, jmbg, email, phoneNumber);
				// If Manager returned null for some reason, let user know. Else, proceed with
				// patient choice
				if (patient == null) {
					messageValue = "Unexpected error occured while creating your profile.";
				} else if (targetJSP.equals("/patients/createPatient.jsp")) {
					forwardResponseWithPatient(request, response, "/patients/patientChoice.jsp");
				} else {
					forwardResponseWithMessage(
							request, response, MESSAGE_PARAM, "Succsefully added new patient "
									+ patient.getFirstName() + " " + patient.getLastName() + ".",
							"/dentists/dentistCalendar.jsp");
				}
			} else {
				forwardResponseWithMessage(request, response, MESSAGE_PARAM,
						"It appears profile with entered JMBG already exists in our database.", targetJSP);
			}
		} else {
			forwardResponseWithMessage(request, response, MESSAGE_PARAM,
					"Please fill out all the required fields.", targetJSP);
		}
		
		request.setAttribute(MESSAGE_PARAM, messageValue);
		RequestDispatcher rd = request.getServletContext().getRequestDispatcher(targetJSP);
		rd.forward(request, response);
	}

}
